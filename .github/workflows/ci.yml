name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install backend deps
        working-directory: backend
        run: npm ci

      - name: Install frontend deps
        working-directory: frontend
        run: |
          if [ -f package.json ]; then npm ci; fi

      - name: Install blockchain deps
        working-directory: blockchain
        run: |
          if [ -f package.json ]; then npm ci; fi

      - name: Lint backend
        working-directory: backend
        run: |
          npm run lint || echo "No lint script, skipping"

      - name: Lint frontend
        working-directory: frontend
        run: |
          npm run lint || echo "No lint script, skipping"

      - name: Run backend tests
        working-directory: backend
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: |
          npm test || echo "No tests, skipping"

      - name: Build frontend
        working-directory: frontend
        run: |
          npm run build || echo "No build script, skipping"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/backend:${{ github.sha }} -f Dockerfile .

      - name: Save image digest
        run: |
          docker inspect ghcr.io/${{ github.repository }}/backend:${{ github.sha }} --format='{{json .Id}}' > image-digest.txt

      - name: Upload image digest artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-image-digest
          path: image-digest.txt
