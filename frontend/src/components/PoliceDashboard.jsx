import React, { useState, useEffect } from "react"
import { 
  Shield, 
  FileText, 
  AlertTriangle, 
  Search, 
  Filter, 
  Download, 
  Eye,
  Clock,
  User,
  MapPin,
  Phone,
  Calendar
} from "lucide-react"
import { useLanguage } from "../contexts/LanguageContext"

const PoliceDashboard = () => {
  const { t } = useLanguage()
  const [efirs, setEfirs] = useState([])
  const [filteredEfirs, setFilteredEfirs] = useState([])
  const [searchTerm, setSearchTerm] = useState("")
  const [statusFilter, setStatusFilter] = useState("all")
  const [selectedEfir, setSelectedEfir] = useState(null)
  const [isLoading, setIsLoading] = useState(false)

  const fetchEfirs = async () => {
    try {
      setIsLoading(true)
      const response = await fetch("http://localhost:5000/api/efir")
      const data = await response.json()
      if (data.success) {
        setEfirs(data.efirs || [])
        setFilteredEfirs(data.efirs || [])
      }
    } catch (error) {
      console.error("Failed to fetch E-FIRs:", error)
    } finally {
      setIsLoading(false)
    }
  }

  const updateEfirStatus = async (efirId, newStatus) => {
    try {
      const response = await fetch(`http://localhost:5000/api/efir/${efirId}/status`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ status: newStatus })
      })
      
      if (response.ok) {
        setEfirs(prev => prev.map(efir => 
          efir._id === efirId ? { ...efir, status: newStatus } : efir
        ))
        setFilteredEfirs(prev => prev.map(efir => 
          efir._id === efirId ? { ...efir, status: newStatus } : efir
        ))
      }
    } catch (error) {
      console.error("Failed to update E-FIR status:", error)
    }
  }

  const downloadEfir = (efir) => {
    const efirData = {
      "E-FIR Number": efir.efirNumber,
      "Tourist Name": efir.touristName,
      "Tourist ID": efir.touristId,
      "Incident Type": efir.incidentType,
      "Description": efir.description,
      "Location": `${efir.latitude}, ${efir.longitude}`,
      "Date": new Date(efir.timestamp).toLocaleString(),
      "Status": efir.status,
      "Generated By": efir.generatedBy || "System"
    }

    const blob = new Blob([JSON.stringify(efirData, null, 2)], { type: "application/json" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = `E-FIR-${efir.efirNumber}.json`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  useEffect(() => {
    fetchEfirs()
    const interval = setInterval(fetchEfirs, 10000) // Refresh every 10 seconds
    return () => clearInterval(interval)
  }, [])

  useEffect(() => {
    let filtered = efirs

    if (searchTerm) {
      filtered = filtered.filter(efir =>
        efir.touristName.toLowerCase().includes(searchTerm.toLowerCase()) ||
        efir.efirNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||
        efir.incidentType.toLowerCase().includes(searchTerm.toLowerCase())
      )
    }

    if (statusFilter !== "all") {
      filtered = filtered.filter(efir => efir.status === statusFilter)
    }

    setFilteredEfirs(filtered)
  }, [efirs, searchTerm, statusFilter])

  const getStatusColor = (status) => {
    switch (status) {
      case "pending": return "text-yellow-600 bg-yellow-100"
      case "in_progress": return "text-blue-600 bg-blue-100"
      case "resolved": return "text-green-600 bg-green-100"
      case "closed": return "text-gray-600 bg-gray-100"
      default: return "text-gray-600 bg-gray-100"
    }
  }

  const getStatusIcon = (status) => {
    switch (status) {
      case "pending": return <Clock className="w-4 h-4" />
      case "in_progress": return <AlertTriangle className="w-4 h-4" />
      case "resolved": return <Shield className="w-4 h-4" />
      case "closed": return <FileText className="w-4 h-4" />
      default: return <FileText className="w-4 h-4" />
    }
  }

  const EfirDetailModal = ({ efir, isOpen, onClose }) => {
    if (!isOpen || !efir) return null

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div className="bg-white rounded-xl shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
          <div className="p-6 border-b border-gray-200">
            <div className="flex items-center justify-between">
              <h3 className="text-xl font-semibold text-gray-900">E-FIR Details</h3>
              <button
                onClick={onClose}
                className="text-gray-400 hover:text-gray-600"
              >
                âœ•
              </button>
            </div>
          </div>

          <div className="p-6 space-y-6">
            <div className="grid grid-cols-2 gap-4">
              <div>
                <label className="text-sm font-medium text-gray-500">E-FIR Number</label>
                <p className="text-lg font-semibold text-gray-900">{efir.efirNumber}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-500">Status</label>
                <div className="flex items-center gap-2 mt-1">
                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(efir.status)}`}>
                    {getStatusIcon(efir.status)}
                    <span className="ml-1">{efir.status.toUpperCase()}</span>
                  </span>
                </div>
              </div>
            </div>

            <div>
              <label className="text-sm font-medium text-gray-500">Tourist Information</label>
              <div className="mt-2 p-4 bg-gray-50 rounded-lg">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <p className="text-sm text-gray-600">Name</p>
                    <p className="font-medium">{efir.touristName}</p>
                  </div>
                  <div>
                    <p className="text-sm text-gray-600">Tourist ID</p>
                    <p className="font-medium">#{efir.touristId}</p>
                  </div>
                </div>
              </div>
            </div>

            <div>
              <label className="text-sm font-medium text-gray-500">Incident Details</label>
              <div className="mt-2 space-y-3">
                <div>
                  <p className="text-sm text-gray-600">Type</p>
                  <p className="font-medium">{efir.incidentType}</p>
                </div>
                <div>
                  <p className="text-sm text-gray-600">Description</p>
                  <p className="text-gray-900">{efir.description}</p>
                </div>
                <div>
                  <p className="text-sm text-gray-600">Location</p>
                  <p className="text-gray-900">{efir.latitude}, {efir.longitude}</p>
                </div>
                <div>
                  <p className="text-sm text-gray-600">Date & Time</p>
                  <p className="text-gray-900">{new Date(efir.timestamp).toLocaleString()}</p>
                </div>
              </div>
            </div>

            <div className="flex gap-3 pt-4 border-t border-gray-200">
              <button
                onClick={() => downloadEfir(efir)}
                className="flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
              >
                <Download className="w-4 h-4" />
                Download
              </button>
              {efir.status === "pending" && (
                <button
                  onClick={() => updateEfirStatus(efir._id, "in_progress")}
                  className="px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700"
                >
                  Start Investigation
                </button>
              )}
              {efir.status === "in_progress" && (
                <button
                  onClick={() => updateEfirStatus(efir._id, "resolved")}
                  className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700"
                >
                  Mark Resolved
                </button>
              )}
            </div>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header */}
        <div className="mb-8">
          <div className="flex items-center gap-3 mb-2">
            <Shield className="w-8 h-8 text-blue-600" />
            <h1 className="text-3xl font-bold text-gray-900">Police Dashboard</h1>
          </div>
          <p className="text-gray-600">Manage E-FIRs and monitor tourist safety incidents</p>
        </div>

        {/* Statistics */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-500">Total E-FIRs</p>
                <p className="text-2xl font-bold text-gray-900">{efirs.length}</p>
              </div>
              <FileText className="w-8 h-8 text-blue-600" />
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-500">Pending</p>
                <p className="text-2xl font-bold text-yellow-600">
                  {efirs.filter(e => e.status === "pending").length}
                </p>
              </div>
              <Clock className="w-8 h-8 text-yellow-600" />
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-500">In Progress</p>
                <p className="text-2xl font-bold text-blue-600">
                  {efirs.filter(e => e.status === "in_progress").length}
                </p>
              </div>
              <AlertTriangle className="w-8 h-8 text-blue-600" />
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-500">Resolved</p>
                <p className="text-2xl font-bold text-green-600">
                  {efirs.filter(e => e.status === "resolved").length}
                </p>
              </div>
              <Shield className="w-8 h-8 text-green-600" />
            </div>
          </div>
        </div>

        {/* Filters */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6">
          <div className="flex flex-col sm:flex-row gap-4">
            <div className="flex-1">
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
                <input
                  type="text"
                  placeholder="Search E-FIRs..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>
            </div>
            <div className="flex gap-2">
              <select
                value={statusFilter}
                onChange={(e) => setStatusFilter(e.target.value)}
                className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="all">All Status</option>
                <option value="pending">Pending</option>
                <option value="in_progress">In Progress</option>
                <option value="resolved">Resolved</option>
                <option value="closed">Closed</option>
              </select>
            </div>
          </div>
        </div>

        {/* E-FIR List */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
          <div className="px-6 py-4 border-b border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900">E-FIR Management</h3>
          </div>

          {isLoading ? (
            <div className="p-8 text-center">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
              <p className="mt-2 text-gray-500">Loading E-FIRs...</p>
            </div>
          ) : filteredEfirs.length === 0 ? (
            <div className="p-8 text-center">
              <FileText className="w-12 h-12 text-gray-400 mx-auto mb-4" />
              <p className="text-gray-500">No E-FIRs found</p>
            </div>
          ) : (
            <div className="overflow-x-auto">
              <table className="min-w-full divide-y divide-gray-200">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      E-FIR Number
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Tourist
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Incident Type
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Status
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Date
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Actions
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200">
                  {filteredEfirs.map((efir) => (
                    <tr key={efir._id} className="hover:bg-gray-50">
                      <td className="px-6 py-4 whitespace-nowrap">
                        <div className="text-sm font-medium text-gray-900">
                          {efir.efirNumber}
                        </div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <div>
                          <div className="text-sm font-medium text-gray-900">
                            {efir.touristName}
                          </div>
                          <div className="text-sm text-gray-500">
                            ID: #{efir.touristId}
                          </div>
                        </div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <div className="text-sm text-gray-900">{efir.incidentType}</div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(efir.status)}`}>
                          {getStatusIcon(efir.status)}
                          <span className="ml-1">{efir.status.toUpperCase()}</span>
                        </span>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {new Date(efir.timestamp).toLocaleDateString()}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <div className="flex items-center gap-2">
                          <button
                            onClick={() => setSelectedEfir(efir)}
                            className="text-blue-600 hover:text-blue-900 p-1"
                            title="View Details"
                          >
                            <Eye className="w-4 h-4" />
                          </button>
                          <button
                            onClick={() => downloadEfir(efir)}
                            className="text-green-600 hover:text-green-900 p-1"
                            title="Download"
                          >
                            <Download className="w-4 h-4" />
                          </button>
                        </div>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          )}
        </div>

        {/* E-FIR Detail Modal */}
        <EfirDetailModal
          efir={selectedEfir}
          isOpen={!!selectedEfir}
          onClose={() => setSelectedEfir(null)}
        />
      </div>
    </div>
  )
}

export default PoliceDashboard
